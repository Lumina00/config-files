#!/usr/bin/nft -f

table inet filter {
  chain input {
    type filter hook input priority 0;

    # allow established/related connections
    ct state {established, related} accept

    # early drop of invalid connections
    ct state invalid drop comment "Drop invalid connection"
    
    # allow from loopback
    iifname lo accept
    iif lo accept 


    # allow icmp
    #ip protocol icmp accept
    #meta l4proto ipv6-icmp accept
    
    tcp dport {http,https} accept
    tcp dport ssh ct state new limit rate 10/hour accept comment "avoid brute force on SSH"
    tcp flags rst drop
    # everything else
    jump portscan  	
    jump synflood
    reject with icmpx type port-unreachable
  }
  chain forward {
    type filter hook forward priority 0;
    drop
  }
  chain output {
    type filter hook output priority 0;
  }
  chain synflood {
    ct state != new return;
    tcp flags != syn ct state new drop
    meter syn_scan { ip saddr limit rate 2/second burst 100 packets} return;
    limit rate 6/minute burst 10 packets log prefix "Drop synflood" level debug continue;
    drop;
  }
  chain portscan {
    tcp flags & (fin|syn) == fin|syn drop
    tcp flags & (syn|rst) == syn|rst drop 
    tcp flags & (fin|syn|rst|psh|ack|urg) < fin drop
    tcp flags & (ack | urg) == urg drop
    tcp flags & (psh | ack) == psh drop
    tcp flags & (fin|syn|rst|psh|ack|urg) == fin|psh|urg drop
    tcp flags & (syn|ack) == syn|ack ct state new drop
    tcp flags & (ack|urg) == urg counter drop	   
  } 
}

# vim:set ts=2 sw=2 et:
